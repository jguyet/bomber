
(function(exports){var FLOOR=0,CEILING=1,SOLID=2;var Tile=function(){}
Tile.prototype={init:false,id:-1,name:"",type:"",image:-1,imagePlain:-1,deepImg:-1,floorImg:-1,ceilingImg:-1,ceilingImg2:-1,level:-1,bottomLess:false,deep:null,surface:null,floor:null,ceiling:null}
var SimpleTile=function(){}
SimpleTile.prototype={init:false,type:"",id:-1,name:"",image:-1};var TileGroup=function(){this.tiles=[]}
TileGroup.prototype={id:-1,name:"",type:"",level:-1,deep:null,surface:null,floor:null,ceiling:null}
Conf=function(){this.tiles=[];this.surface=[];this.deep=[];this.groups=[];this.tileByName={};this.groupByName={};}
function levelByType(name){if(name=="floor"||name=="arrow"||name=="abyss")return FLOOR;if(name=="ceiling"||name=="box"||name=="building"||name=="tunnel")return CEILING;if(name=="solid"||name=="glass"||name=="hideout")return SOLID;return CEILING;}
Conf.prototype={newTile:function(name,map){var tile=this.getTile(name);if(tile.init)throw"Second time creating tile";tile.init=true;if(map){for(var key in map)
if(map.hasOwnProperty(key))
tile[key]=map[key];}
tile.deep=this.getDeep(tile.deep);tile.surface=this.getSurface(tile.surface);tile.floor=this.getTile(tile.floor);tile.ceiling=this.getTile(tile.ceiling);return tile;},getTile:function(name){if(typeof name!="string"){return name;}
var id=-1;for(var i=0;i<this.tiles.length;i++)
if(this.tiles[i].name==name)
return this.tiles[i];index=this.tiles.length;var tile=new Tile();tile.id=index;tile.name=name;this.tiles.push(tile);if(name!="")
this.tileByName[name]=tile;return tile;},newSurface:function(name,map){var tile=this.getSurface(name);if(tile.init)throw"Second time creating surface tile";tile.init=true;if(map){for(var key in map)
if(map.hasOwnProperty(key))
tile[key]=map[key];}
return tile;},getSurface:function(name){if(typeof name!="string"){return name;}
var id=-1;for(var i=0;i<this.surface.length;i++)
if(this.surface[i].name==name)
return this.surface[i];index=this.surface.length;var tile=new SimpleTile();tile.id=index;tile.name=name;this.surface.push(tile);if(name!="")
this.tileByName[name]=tile;return tile;},newDeep:function(name,map){var tile=this.getDeep(name);if(tile.init)throw"Second time creating deep tile";tile.init=true;if(map){for(var key in map)
if(map.hasOwnProperty(key))
tile[key]=map[key];}
return tile;},getDeep:function(name){if(typeof name!="string"){return name;}
var id=-1;for(var i=0;i<this.deep.length;i++)
if(this.deep[i].name==name)
return this.deep[i];index=this.deep.length;var tile=new SimpleTile();tile.id=index;tile.name=name;this.deep.push(tile);if(name!="")
this.tileByName[name]=tile;return tile;},newGroup:function(name,map){if(this.groupByName.hasOwnProperty(name))
throw"Second time creating group '"+name+"'";var group=new TileGroup();group.id=this.groups.length;group.name=name;this.groups.push(group);if(name!="")
this.groupByName[name]=group;for(var key in map)
if(map.hasOwnProperty(key))
group[key]=map[key];group.deep=this.getDeep(group.deep);group.surface=this.getSurface(group.surface);group.floor=this.getTile(group.floor);group.ceiling=this.getTile(group.ceiling);for(var i=0;i<map.subTiles.length;i++){var tile=this.getTile(map.subTiles[i]);if(!tile)throw"subtile is null";group.tiles.push(tile);}},bindSprite:function(childList){var tiles=this.tiles;for(var i=0;i<tiles.length;i++){var tile=tiles[i];tile.image=tile.image2=-1;}
for(var i=0;i<this.surface.length;i++){var tile=this.surface[i];tile.image=-1;}
for(var i=0;i<this.deep.length;i++){var tile=this.deep[i];tile.image=-1;}
var byName=this.tileByName;for(var i=0;i<childList.length;i++){var name=childList[i];if(byName.hasOwnProperty(name))
byName[name].image=i;if(name.substring(name.length-6,name.length)=="-plain"){var name2=name.substring(0,name.length-6);if(byName.hasOwnProperty(name2))
byName[name2].image2=i;}}
var groups=this.groups;for(var i=0;i<groups.length;i++){var group=groups[i];tiles=group.tiles;var img=-1,img2=-1;for(var j=0;j<tiles.length;j++){var tile=tiles[j];if(tile.image!=-1){img=tile.image;img2=tile.image2;}else{tile.image=img;tile.image2=img2;}}}
tiles=this.tiles;for(var i=0;i<tiles.length;i++){var tile=tiles[i];tile.deepImg=tile.deep?tile.deep.image:-1;tile.floorImg=tile.floor?tile.floor.image:-1;tile.ceilingImg=tile.ceiling?tile.ceiling.image:-1;tile.ceilingImg2=tile.ceiling?tile.ceiling.image2:-1;if(tile.image!=-1){switch(tile.level){case 0:tile.floorImg=tile.image;break;case 2:tile.ceilingImg2=tile.image2;case 1:tile.ceilingImg=tile.image;break;}}}},defaultTile:null,defaultSurface:null,defaultDeep:null,setDefaultTile:function(tile){this.defaultTile=tile;},setDefaultDeep:function(tile){this.defaultDeep=tile;},setDefaultSurface:function(tile){this.defaultSurface=tile;},link:function(){if(this.defaultTile==null)
this.defaultTile=this.tiles[0];var tiles,tile;var groups=this.groups;for(var i=0;i<groups.length;i++){var group=groups[i];tiles=group.tiles;for(var j=0;j<tiles.length;j++){tile=tiles[j];if(group.type!=""&&tile.type=="")tile.type=group.type;if(group.level!=-1&&tile.level==-1)tile.level=group.level;if(group.deep&&!tile.deep)tile.deep=group.deep;if(group.surface&&!tile.surface)tile.surface=group.surface;if(group.floor&&!tile.floor)tile.floor=group.floor;if(group.ceiling&&!tile.ceiling)tile.ceiling=group.ceiling;if(group.hasOwnProperty("bottomLess")&&!tile.hasOwnProperty("bottomLess"))
tile.bottomLess=group.bottomLess;}}
tiles=this.tiles;for(var i=0;i<tiles.length;i++){tile=tiles[i];if(!tile.init){throw"no calls of newTile for '"+tile.name+"'"}
if(tile.level==-1){if(tile.type!="")
tile.level=levelByType(tile.type)
else{tile.type="floor";tile.level=FLOOR;}}}
for(var i=0;i<tiles.length;i++){tile=tiles[i];if(!tile.deep)tile.deep=this.defaultDeep;}}}
exports.Conf=Conf;})(typeof exports==='undefined'?window:exports);
(function(exports){function createOneDimArray(size,def){var res=[];for(var j=0;j<size;j++){res.push(def);}
return res;}
function createTwoDimArray(w,h,def){var res=[];for(var j=0;j<h;j++){var a=[];for(var i=0;i<w;i++){a.push(def);}
res.push(a);}
return res;}
var CHUNK_SIZE=8;var CHUNK_SIZE_BITS=3;var TILE=32;var TILE_BITS=5;var BITS=CHUNK_SIZE_BITS+TILE_BITS;var W2=CHUNK_SIZE+2;var Map=function(w,h,def){if(typeof def!=="undefined"){this.width=w;this.height=h;this.field=createTwoDimArray(w,h,def);}else{var conf=w,json=h;this.width=json.field[0].length;this.height=json.field.length;this.field=createTwoDimArray(this.width,this.height,0);this.loadJSON(conf,json)}
this.init();}
Map.prototype={width:0,height:0,cWidth:0,cHeight:0,revision:0,modified:false,chunks:null,loadJSON:function(conf,json){if(json.revision)
this.revision=json.revision;if(this.height!=json.field.length)throw"wrong map width in previous save";if(this.width!=json.field[0].length)throw"wrong map height in previous save";for(var j=0;j<this.height;j++)
for(var i=0;i<this.width;i++){var tileName=json.tiles[json.field[j][i]&0xff];var tile=conf.tileByName[tileName];var v=0;if(!tile)
v=conf.defaultTile.id;else
v=tile.id;if(json.surface){tileName=json.surface[(json.field[j][i]>>8)&0xff];var tile=conf.tileByName[tileName];if(!tile)
v|=conf.defaultSurface.id<<8;else
v|=tile.id<<8;}
if(this.chunks)
this.set(i,j,v);else
this.field[j][i]=v;}
this.modified=false;},init:function(){if(this.width%CHUNK_SIZE!=0||this.height%CHUNK_SIZE!=0){throw"map size must be divisible by "+CHUNK_SIZE;}
this.cWidth=this.width>>CHUNK_SIZE_BITS;this.cHeight=this.height>>CHUNK_SIZE_BITS;this.chunks=[];for(var y=0;y<this.cHeight;y++){var row=[];for(var x=0;x<this.cWidth;x++){row.push(new Chunk(this,x*CHUNK_SIZE,y*CHUNK_SIZE));}
this.chunks.push(row);}},set:function(x,y,value){if(x<0||y<0||x>=this.width||y>=this.height)return;if(this.field[y][x]==value)return;this.modified=true;this.field[y][x]=value;if(x%CHUNK_SIZE!=0&&x%CHUNK_SIZE!=CHUNK_SIZE-1&&y%CHUNK_SIZE!=0&&y%CHUNK_SIZE!=CHUNK_SIZE-1){this.chunks[y>>CHUNK_SIZE_BITS][x>>CHUNK_SIZE_BITS].touch();return;}
for(var dx=-1;dx<=1;dx++)
for(var dy=-1;dy<=1;dy++){var x1=(x+dx+this.width)%this.width>>CHUNK_SIZE_BITS;var y1=(y+dy+this.height)%this.height>>CHUNK_SIZE_BITS;this.chunks[y1][x1].touch();}},setTile:function(x,y,value){if(x<0||y<0||x>=this.width||y>=this.height)return;this.set(x,y,(this.field[y][x]&~0xff)|value);},setSurface:function(x,y,value){if(x<0||y<0||x>=this.width||y>=this.height)return;this.set(x,y,(this.field[y][x]&~0xff00)|(value<<8));},get:function(x,y){if(x<0||y<0||x>=this.width||y>=this.height)return 0;return this.field[y][x];},getTile:function(x,y){if(x<0||y<0||x>=this.width||y>=this.height)return 0;return this.field[y][x]&0xff;},getSurface:function(x,y){if(x<0||y<0||x>=this.width||y>=this.height)return 0;return(this.field[y][x]>>8)&0xff;},getChunk:function(chunkX,chunkY){if(chunkX<0||chunkY<0||chunkX>=this.cWidth||chunkY>=this.cHeight)return 0;return this.chunks[chunkY][chunkX];}}
var Chunk=function(map,x,y){this.mem=createOneDimArray(W2*W2);this.memSurface=createOneDimArray(W2*W2);this.map=map;this.x=x;this.y=y;this.visual=createOneDimArray(CHUNK_SIZE*CHUNK_SIZE);this.visual2=createOneDimArray(CHUNK_SIZE*CHUNK_SIZE);this.changes=[];}
Chunk.prototype={canvas:null,game:null,x:0,y:0,dirty:3,copyFromField:function(helper){var map=this.map;var field=map.field,w=map.width,h=map.height;var k=0;for(var j=-1;j<=CHUNK_SIZE;j++)
for(var i=-1;i<=CHUNK_SIZE;i++){var x1=((this.x+i)%w+w)%w;var y1=((this.y+j)%h+h)%h;this.mem[k]=field[y1][x1];this.memSurface[k++]=helper.getSurfaceByTile(field[y1][x1]);}},calcChanges:function(helper){this.copyFromField(helper);var k=0;var changes=this.changes;while(changes.length)
changes.pop();for(var j=0;j<CHUNK_SIZE;j++)
for(var i=0;i<CHUNK_SIZE;i++){var k2=W2*(j+1)+(i+1);var v=helper.getTileNumber(this.mem,k2-W2,k2,k2+W2);var mod=0;if(v!=this.visual[k]){this.visual[k]=v;if(changes.length<10){mod=1;changes.push(k);}}
v=helper.getSurfaceNumber(this.memSurface,k2-W2,k2,k2+W2);if(v!=this.visual2[k]){this.visual2[k]=v;if(changes.length<10&&mod==0)
changes.push(k);}
k++;}
if(changes.length==10)
this.dirty=3;else
if(changes.length==0)
this.dirty=0;else this.dirty=2;},touch:function(){if(this.dirty==0)
this.dirty=1;},clean:function(){this.dirty=0;}}
var Game=function(map,conf){this.map=map;this.conf=conf;this.obj=createTwoDimArray(map.width,map.height,null);}
Game.prototype={getObj:function(x,y){if(x<0||y<0||x>=this.map.width||y>=this.map.height)return 0;return this.obj[y][x];},rmObj:function(x,y){if(x<0||y<0||x>=this.map.width||y>=this.map.height)return 0;this.obj[y][x]=null;},asJSON:function(){var res={tiles:[],surface:[],field:this.map.field,revision:this.map.revision};for(var i=0;i<this.conf.tiles.length;i++)
res.tiles.push(this.conf.tiles[i].name);for(var i=0;i<this.conf.surface.length;i++)
res.surface.push(this.conf.surface[i].name);return res;},clearEntities:function(){for(var i=0;i<this.obj.length;i++)
for(var j=0;j<this.obj[i].length;j++)
this.obj[i][j]=null;},randomize:function(entities){var map=this.map;for(var j=0;j<entities.length;j++){var type=entities[j];var cnt=(map.width*map.height/type.density+1)|0;for(var i=0;i<cnt;i++){var x=Math.random()*map.width|0;var y=Math.random()*map.height|0;var c=50;while(c>0&&(this.conf.tiles[map.field[y][x]&0xff].type!="floor"||this.obj[y][x]!=null))
{x=Math.random()*map.width|0;y=Math.random()*map.height|0;c--;}
if(this.obj[y][x]==null){var sx=Math.random()*type.framesX|0;var sy=Math.random()*type.framesY|0;if(type.prob){var s=0;for(var k=0;k<type.prob.length;k++)
s+=type.prob[k];s=Math.random()*s|0;for(var k=0;k<type.prob.length;k++)
if(s>=type.prob[k])
s-=type.prob[k];else{sx=k%type.framesX;sy=k/type.framesX|0;break;}}
var color;if(type.colors)
color=Math.random()*type.colors|0;var size=type.rndSize?(Math.random()*0.5+0.75):1.0;if(type.rndSize){var min=type.rndSizeMin||0.75;var max=type.rndSizeMax||1.25;size=(max-min)*Math.random()+min;}
this.obj[y][x]={type:type,sx:sx,sy:sy,dx:x*TILE+TILE/2,dy:y*TILE+TILE/2,size:size||1.0,color:color||0};}}}},setTile:function(x,y,value){if(x<0||y<0||x>=this.width||y>=this.height)return;var s=this.conf.tiles[value].surface;if(s!=null&&s.type!=1)
this.map.set(x,y,value|(s.id<<8))
else{this.map.setTile(x,y,value);}}}
exports.Map=Map;exports.Game=Game;})(typeof exports==='undefined'?window:exports);
(function(exports){var CHUNK_SIZE=8;var CHUNK_SIZE_BITS=3;var TILE=32;var TILE_BITS=5;var BITS=CHUNK_SIZE_BITS+TILE_BITS;var SHADOW=TILE/8;var Renderer=function(canvas,game,resources){this.canvas=canvas;this.game=game;this.resources=resources;this.camX=game.map.width<<(TILE_BITS-1);this.camY=game.map.height<<(TILE_BITS-1);this.testSurf=[0,0,0,0,0,0,0,0,0];}
var xX=[1,1,0,-1,-1,-1,0,1];var xY=[0,1,1,1,0,-1,-1,-1];Renderer.prototype={canvas:null,game:null,resources:null,camX:0,camY:0,camScale:1,point:function(x,y){x-=this.canvas.width/2;y-=this.canvas.height/2;x*=this.camScale
y*=this.camScale
x+=this.camX;y+=this.camY;return{x:x,y:y}},moveCam:function(dx,dy){var cX=this.camX+dx*this.camScale,cY=this.camY+dy*this.camScale;if(cX<0)cX=0;if(cY<0)cY=0;if(cX>this.game.map.width*TILE)cX=this.game.map.width*TILE;if(cY>this.game.map.height*TILE)cY=this.game.map.height*TILE;this.camX=cX;this.camY=cY;},roundCam:function(){this.camX=this.camX|0;this.camY=this.camY|0;},getSurfaceByTile:function(tileNum){var conf=this.game.conf;if(conf.tiles[tileNum&0xff].level==2)
return-1;var tile=conf.tiles[tileNum&0xff].surface||conf.surface[tileNum>>8];return tile.id;},getSurfaceNumber:function(buf,line1,line2,line3){var conf=this.game.conf;var id=buf[line2];if(id==-1)return-1;var tile=conf.surface[id];if(tile==conf.defaultSurface||tile.type==2)
return tile.image;var test=this.testSurf;var id2;id2=buf[line1-1];test[0]=id2!=id&&id2!=-1&&conf.surface[id2].type!=2;id2=buf[line1];test[1]=id2!=id&&id2!=-1&&conf.surface[id2].type!=2;id2=buf[line1+1];test[2]=id2!=id&&id2!=-1&&conf.surface[id2].type!=2;id2=buf[line2-1];test[3]=id2!=id&&id2!=-1&&conf.surface[id2].type!=2;id2=buf[line2+1];test[5]=id2!=id&&id2!=-1&&conf.surface[id2].type!=2;id2=buf[line3-1];test[6]=id2!=id&&id2!=-1&&conf.surface[id2].type!=2;id2=buf[line3];test[7]=id2!=id&&id2!=-1&&conf.surface[id2].type!=2;id2=buf[line3+1];test[8]=id2!=id&&id2!=-1&&conf.surface[id2].type!=2;if(!test[0]&&!test[1]&&!test[2]&&!test[3]&&!test[5]&&!test[6]&&!test[7]&&!test[8])
return tile.image;var res=tile.image;if(res==-1)return res;for(var i=0;i<4;i++){var dx=i&1,dy=i>>1;var dx2=dx*2-1,dy2=dy*2-1;var r;if(test[4+dx2]){if(test[4+dy2*3]){r=2;}else r=13-dx2*2;}else if(test[4+dy2*3]){r=13-dy2*8;}else if(test[4+dx2+dy2*3]){r=13-dx2*2-dy2*8;}else r=0;r+=dx+dy*4;res|=(r<<(8+i*6));}
return res;},getTileNumber:function(buf,line1,line2,line3){var conf=this.game.conf;var tile=conf.tiles[buf[line2]&0xff];var U=conf.tiles[buf[line1]&0xff];var D=conf.tiles[buf[line3]&0xff];var low=(tile.bottomLess&&!U.bottomLess)?U.deepImg:-1,mid=tile.floorImg,high=(tile.level==2&&D.level==2&&tile.ceilingImg2!=-1)?tile.ceilingImg2:tile.ceilingImg;var shadow=0;if(tile.level!=2){if(conf.tiles[buf[line2+1]&0xff].level==2)shadow|=1;if(conf.tiles[buf[line3+1]&0xff].level==2)shadow|=1<<1;if(conf.tiles[buf[line3]&0xff].level==2)shadow|=1<<2;if(conf.tiles[buf[line3-1]&0xff].level==2)shadow|=1<<3;if(conf.tiles[buf[line2-1]&0xff].level==2)shadow|=1<<4;if(conf.tiles[buf[line1-1]&0xff].level==2)shadow|=1<<5;if(conf.tiles[buf[line1]&0xff].level==2)shadow|=1<<6;if(conf.tiles[buf[line1+1]&0xff].level==2)shadow|=1<<7;}
return(low&0xff)+((mid&0xff)<<8)+((high&0xff)<<16)+((shadow&0xff)<<24);},renderChunk:function(chunk){var canvas=chunk.canvas;if(canvas==null){canvas=chunk.canvas=document.createElement("canvas");canvas.width=TILE*CHUNK_SIZE;canvas.height=TILE*CHUNK_SIZE;}
var context=canvas.getContext("2d");context.clearRect(0,0,TILE*CHUNK_SIZE,TILE*CHUNK_SIZE);var k=0;var asset=this.resources.tileset;for(var j=0;j<CHUNK_SIZE;j++)
for(var i=0;i<CHUNK_SIZE;i++){var t=chunk.visual[k];var num=t&0xff;if(num!=255)context.drawImage(asset.image,asset.frames[num].x,asset.frames[num].y,asset.frameWidth,asset.frameHeight,i*TILE,j*TILE,TILE,TILE);var v2=chunk.visual2[k];num=v2&0xff;if(num!=0xff){var x,y;v2>>>=8;if(v2!=0){x=(v2&3)*asset.frameWidth/2;y=((v2&63)>>2)*asset.frameHeight/2;context.drawImage(asset.image,asset.frames[num].x+x,asset.frames[num].y+y,asset.frameWidth/2,asset.frameHeight/2,i*TILE,j*TILE,TILE/2,TILE/2);v2>>>=6;x=(v2&3)*asset.frameWidth/2;y=((v2&63)>>2)*asset.frameHeight/2;context.drawImage(asset.image,asset.frames[num].x+x,asset.frames[num].y+y,asset.frameWidth/2,asset.frameHeight/2,i*TILE+TILE/2,j*TILE,TILE/2,TILE/2);v2>>>=6;x=(v2&3)*asset.frameWidth/2;y=((v2&63)>>2)*asset.frameHeight/2;context.drawImage(asset.image,asset.frames[num].x+x,asset.frames[num].y+y,asset.frameWidth/2,asset.frameHeight/2,i*TILE,j*TILE+TILE/2,TILE/2,TILE/2);v2>>>=6;x=(v2&3)*asset.frameWidth/2;y=((v2&63)>>2)*asset.frameHeight/2;context.drawImage(asset.image,asset.frames[num].x+x,asset.frames[num].y+y,asset.frameWidth/2,asset.frameHeight/2,i*TILE+TILE/2,j*TILE+TILE/2,TILE/2,TILE/2);}else context.drawImage(asset.image,asset.frames[num].x,asset.frames[num].y,asset.frameWidth,asset.frameHeight,i*TILE,j*TILE,TILE,TILE);}
num=(t>>8)&0xff;if(num!=255)context.drawImage(asset.image,asset.frames[num].x,asset.frames[num].y,asset.frameWidth,asset.frameHeight,i*TILE,j*TILE,TILE,TILE);num=(t>>16)&0xff;if(num!=255)context.drawImage(asset.image,asset.frames[num].x,asset.frames[num].y,asset.frameWidth,asset.frameHeight,i*TILE,j*TILE,TILE,TILE);k++;}
context.fillStyle="black";context.globalAlpha=0.3;context.beginPath();k=0;for(var j=0;j<CHUNK_SIZE;j++)
for(var i=0;i<CHUNK_SIZE;i++){var shadow=(chunk.visual[k++]>>24)&0xff;if(shadow>0){var x=i*TILE,y1=j*TILE,y2=(j+1)*TILE,t=SHADOW;if((shadow&24)==24){context.rect(x,y1,t,TILE);}else if((shadow&24)==16){context.moveTo(x+t,y1);context.lineTo(x,y1);context.lineTo(x,y2);context.lineTo(x+t,y2-t);context.lineTo(x+t,y1);}}}
context.fill();context.beginPath();context.strokeStyle="black";context.globalAlpha=0.4;context.lineWidth=1;k=0;for(var j=0;j<CHUNK_SIZE;j++)
for(var i=0;i<CHUNK_SIZE;i++){var shadow=(chunk.visual[k++]>>24)&0xff;if(shadow>0){var x1=i*TILE,x2=(i+1)*TILE,y1=j*TILE,y2=(j+1)*TILE;if((shadow&1)!=0){context.moveTo(x2-0.5,y1);context.lineTo(x2-0.5,y2);}
if((shadow&4)!=0){context.moveTo(x1,y2-0.5);context.lineTo(x2,y2-0.5);}
if((shadow&16)!=0){context.moveTo(x1+0.5,y1);context.lineTo(x1+0.5,y2);}
if((shadow&64)!=0){context.moveTo(x1,y1+0.5);context.lineTo(x2,y1+0.5);}}}
context.stroke();context.globalAlpha=1.0;},renderAll:function(){var canvas=this.canvas;context=canvas.getContext("2d");context.fillStyle="black";context.fillRect(0,0,canvas.width,canvas.height);context.save();var camX=this.camX,camY=this.camY,camScale=this.camScale;var W=(canvas.width>>1),H=(canvas.height>>1);context.translate(W,H)
context.scale(1.0/camScale,1.0/camScale)
W*=camScale;H*=camScale;context.translate(-camX,-camY)
var X1=(camX-W)>>TILE_BITS,Y1=(camY-H)>>TILE_BITS,X2=(camX+W)>>TILE_BITS,Y2=(camY+H)>>TILE_BITS;var CX1=X1>>CHUNK_SIZE_BITS,CY1=Y1>>CHUNK_SIZE_BITS,CX2=X2>>CHUNK_SIZE_BITS,CY2=Y2>>CHUNK_SIZE_BITS;for(var j=CY1;j<=CY2;j++)
for(var i=CX1;i<=CX2;i++){var chunk=this.game.map.getChunk(i,j);var alpha=1.0;if(!chunk){var w=this.game.map.cWidth,h=this.game.map.cHeight;chunk=this.game.map.getChunk((i+w)%w,(j+h)%h);}
if(chunk){if(chunk.dirty>0){chunk.calcChanges(this);this.renderChunk(chunk);chunk.clean();}
context.globalAlpha=alpha;context.drawImage(chunk.canvas,i<<BITS,j<<BITS);context.globalAlpha=1.0;}}
var w=this.game.map.width,h=this.game.map.height;for(var j=Y1;j<=Y2;j++)
for(var i=X1;i<=X2;i++){var planeX=Math.floor(i/w)*w,planeY=Math.floor(j/h)*h;var p=this.game.getObj(i-planeX,j-planeY);if(p){var frameHeight=p.type.frameHeight?p.type.frameHeight:p.type.frameWidth;var sW=p.type.frameWidth,dW=p.type.renderWidth*p.size;var cx=p.dx+planeX*TILE,cy=p.dy+planeY*TILE;if(p.type.renderShiftX)cy+=p.type.renderShiftX;if(p.type.renderShiftY)cy+=p.type.renderShiftY;var renderHeight=p.type.renderWidth*frameHeight/p.type.frameWidth;var sH=frameHeight,dH=renderHeight*p.size;var sy=p.sy+(p.color||0)*p.type.framesY;if(p.mirror){context.save();context.translate(cx,cy);context.scale(-1,1);context.drawImage(p.type.image,p.sx*sW,sy*sH,sW,sH,-dW/2,-dH/2,dW,dH);context.restore();}else
context.drawImage(p.type.image,p.sx*sW,sy*sH,sW,sH,cx-dW/2,cy-dH/2,dW,dH);}}
context.restore();}}
exports.Renderer=Renderer;})(typeof exports==='undefined'?window:exports);
(function(exports){var Resources=function(assets,callback){var self=this;var count=1;var done=function(){count--;if(count==0){if(callback)
callback();}}
this.assets=assets;this.assetByName={};for(var i=0;i<assets.length;i++){var asset=assets[i];if(asset.url){count++;var img=new Image();img.onload=done;img.src=asset.url;asset.image=img;}}
done();}
Resources.prototype={processTiles:function(conf){this.entities=[];for(var i=0;i<this.assets.length;i++){var asset=this.assets[i];if(asset.name=="tileset"){this.tileset=asset;}else this.entities.push(asset);}
var asset=this.tileset;if(asset==null)return;asset.frames=[];asset.childList=[];for(var i=0;i<asset.rows.length;i++)
for(var j=0;j<asset.rows[i].length;j++){var name=asset.rows[i][j];if(name!=""){asset.frames.push({x:asset.frameWidth*j,y:asset.frameHeight*i});asset.childList.push(name);}}
conf.bindSprite(asset.childList);}}
exports.Resources=Resources;})(typeof exports==='undefined'?window:exports)
var BackgroundApp=function(canvasId,html5Id){var conf=this.conf=new Conf();var assets=[];var fadeInTime=800,fadeOutTime=240;var resources,game,map,renderer;var canvas=$("#"+canvasId)[0];var html5=$("#"+html5Id);$(canvas).css({display:"none"});var self=this;var onFadeOut=function(){if(canvas)
$(canvas).fadeOut(fadeOutTime,function(){self.randomize();});}
var onResize=function(){if(canvas){canvas.width=window.innerWidth;canvas.height=window.innerHeight;self.renderer.renderAll();}}
function start(){for(var key in self.beforeStart)
self.beforeStart[key](self);resources=self.resources=new Resources(assets,function(){resources.processTiles(conf);if(canvas){$(window).resize(onResize)
html5.click(onFadeOut)
canvas.width=window.innerWidth;canvas.height=window.innerHeight;self.setup();}});}
this.free=function(){html5.unbind('click',onFadeOut);$(window).unbind('resize',onResize);canvas=null;html5=null;}
this.addAssets=function(asset){if(asset instanceof Array){for(var i=0;i<asset.length;i++)
assets.push(asset[i]);}else assets.push(asset);}
this.addModule=function(module){if(module.beforeStart)
this.beforeStart.push(module.beforeStart);if(module.afterStart)
this.afterStart.push(module.afterStart);}
this.setup=function(){var canvas=$("#bg")[0];map=this.map=new Map(this.conf,this.defaultSave)
game=this.game=new Game(this.map,this.conf);renderer=this.renderer=new Renderer(canvas,this.game,this.resources);this.randomize();$(canvas).fadeIn(fadeInTime);},this.randomize=function(){game.clearEntities();game.randomize(resources.entities);renderer.camX=Math.random()*map.width*32|0;renderer.camY=Math.random()*map.height*32|0;renderer.renderAll();$(canvas).fadeIn(800)}
start();}
BackgroundApp.addModule=function(module){if(module.beforeStart)
BackgroundApp.prototype.beforeStart.push(module.beforeStart);if(module.afterStart)
BackgroundApp.prototype.afterStart.push(module.afterStart);}
BackgroundApp.prototype={beforeStart:[],afterStart:[]}
BackgroundApp.addModule({beforeStart:function(app){app.style="grassfield"
app.addAssets({name:"tileset",url:"/i/back/tileset.png",frameWidth:32,frameHeight:32,rows:[["grass","","deep","","sand","","dirt"],[],[],["rocky1","grass2","grass3","field","hole1","hole2","hole3","hole4"],["","rocky_hole","","dirty_hole","bridge_h","bridge_v","bridge_metal_v","bridge_metal_h"],["tile","tile2","tile3","tile4","left","up","right","down"],["button_off","button_on","bridge_off","bridge_on","tile_blue","tile_red","tile_yellow","tile_purple"],["deep_default","deep_bridge","","","","well"],["rock3-plain","rock3","rock2-plain","rock2","rock1-plain","rock1","rock0-plain","rock0"],["chest_in_rock-plain","chest_in_rock","silver2-plain","silver2","silver1-plain","silver1","silver0-plain","silver0"],["tough9","tough6","gold2-plain","gold2","gold1-plain","gold1","gold0-plain","gold0"],["tough4","tough2","diamond2-plain","diamond2","diamond1-plain","diamond1","diamond0-plain","diamond0"],["wall6-plain","wall6","wall4-plain","wall4","wall2-plain","wall2","metal"],["brick-plain","brick","bush-plain","bush","box_block","logs","cactus"],["chest","gold_chest","diamond_chest","metal_chest"],["box1","box_with_bombs","goal","wc"],["gate_closed","tunnel","gate_opened"],["tube1","tube2","tube3","tube4","spike_off","spike_on","jumppad_off","jumppad_on"],["flag_white","flag_red","flag_blue","flag_yellow","flag_purple"]]});var conf=app.conf,newTile=conf.newTile.bind(conf),newGroup=conf.newGroup.bind(conf),newSurface=conf.newSurface.bind(conf),newDeep=conf.newDeep.bind(conf),getDeep=conf.getDeep.bind(conf),getSurface=conf.getSurface.bind(conf),sub=conf.newTile.bind(conf),getTile=conf.getTile.bind(conf);conf.setDefaultTile(newTile("nothing"))
conf.setDefaultDeep(newDeep("deep_default"))
newDeep("deep_bridge");newSurface("grass")
newSurface("deep",{type:1})
newSurface("dirt")
newSurface("sand")
newSurface("tile",{type:2})
conf.setDefaultSurface(newSurface("rocky1"));newTile("cactus");newGroup("basic",{type:"floor",subTiles:[sub("sand1",{surface:"sand"})]})
newTile("abyss",{surface:"deep",type:"abyss",bottomLess:true});newGroup("grass",{type:"floor",surface:"grass",subTiles:[sub("grass1"),sub("grass2"),sub("grass3")]});newTile("field",{surface:"grass"});newGroup("hole",{type:"floor",subTiles:[sub("hole1",{surface:"grass"}),sub("hole2",{surface:"grass"}),sub("hole3",{surface:"rocky1"}),sub("hole4",{surface:"rocky1"})]})
newGroup("rocky",{type:"floor",surface:"rocky1",subTiles:[sub("rocky"),sub("rocky_hole")]})
newGroup("dirty",{type:"floor",surface:"dirt",subTiles:[sub("dirty"),sub("dirty_hole")]})
newGroup("bridge",{type:"floor",surface:"deep",deep:"deep_bridge",subTiles:[sub("bridge_h"),sub("bridge_v")]})
newGroup("bridge_metal",{type:"floor",surface:"deep",deep:"deep_bridge",subTiles:[sub("bridge_metal_v"),sub("bridge_metal_h")]})
newGroup("tile",{type:"floor",surface:"tile",subTiles:[sub("tile1"),sub("tile2"),sub("tile3"),sub("tile4")]})
newGroup("arrow",{type:"arrow",surface:"tile",deep:"deep_bridge",subTiles:[sub("left"),sub("up"),sub("right"),sub("down")]})
newTile("brick",{type:"solid"})
newGroup("rock",{type:"solid",subTiles:[sub("rock3"),sub("rock2"),sub("rock1"),sub("rock0"),sub("silver3"),sub("silver2"),sub("silver1"),sub("silver0"),sub("gold3"),sub("gold2"),sub("gold1"),sub("gold0"),sub("diamond3"),sub("diamond2"),sub("diamond1"),sub("diamond0")]})
newGroup("tough",{type:"solid",subTiles:[sub("tough9"),sub("tough8"),sub("tough7"),sub("tough6"),sub("tough5"),sub("tough4"),sub("tough3"),sub("tough2"),sub("tough1")]})
newGroup("wall",{type:"solid",subTiles:[sub("wall6"),sub("wall5"),sub("wall4"),sub("wall3"),sub("wall2"),sub("wall1")]})
newTile("chest_in_rock",{type:"solid"})
newTile("metal",{type:"solid"})
newGroup("tunnel",{type:"tunnel",subTiles:[sub("tunnel",{surface:"rocky1"}),sub("tunnel_tile",{surface:"tile"})]})
newGroup("chest",{type:"box",subTiles:[sub("chest"),sub("gold_chest"),sub("gold_chest_tile",{surface:"tile"}),sub("metal_chest"),sub("metal_chest_tile",{surface:"tile"}),sub("diamond_chest")]})
newGroup("box",{type:"box",surface:"tile",subTiles:[sub("box1"),sub("box2")]})
newGroup("box_bombs",{type:"box",subTiles:[sub("box_with_bombs"),sub("box_with_bombs_tile",{surface:"tile"})]})
newTile("goal",{type:"building",floor:"field",})
newTile("wc",{type:"building"})
newGroup("bush",{subTiles:[sub("bush",{type:"glass"}),sub("bush_hollow",{type:"hideout"})]})
newGroup("gate",{surface:"rocky1",subTiles:[sub("gate_closed",{type:"box"}),sub("gate_opened",{type:"building"})]})
newGroup("button",{surface:"tile",type:"floor",subTiles:[sub("button_off"),sub("button_on"),sub("button_fake")]})
newGroup("button_toggle",{surface:"tile",type:"floor",subTiles:[sub("button2_off",{floor:"button_off"}),sub("button2_on",{floor:"button_on"})]})
newGroup("bridge_toggle",{surface:"deep",bottomLess:true,subTiles:[sub("bridge_off",{type:"abyss"}),sub("bridge_on",{type:"floor"})]})
newGroup("flag",{type:"building",subTiles:[sub("flag_white"),sub("flag_red"),sub("flag_blue"),sub("flag_yellow"),sub("flag_purple")]})
newGroup("tubes",{type:"box",surface:"tile",deep:"deep_bridge",subTiles:[sub("tube1"),sub("tube2"),sub("tube3"),sub("tube4")]})
conf.link();}})
BackgroundApp.addModule({beforeStart:function(app){app.addAssets([{name:'player',density:24,url:'/i/back/skins8bit.png',frameWidth:50,renderWidth:50,framesX:1,framesY:100,renderShiftY:-4},{name:"item",density:64,url:"/i/back/items.png",frameWidth:32,renderWidth:32,framesX:3,framesY:7,prob:[10,5,0,10,5,5,10,10,10,10,10,10,10,10,10,5,0,0,0,0,0,3,3,3,1,5,1]},{name:"bomb",density:64,url:"/i/back/bomb_64x64_2.png",frameWidth:64,renderWidth:32,framesX:1,framesY:10,rndSize:true,rndSizeMin:0.75,rndSizeMax:1.25}])}});
BackgroundApp.addModule({beforeStart:function(app){app.defaultSave={"tiles":["grass","deep_default","hole1","dirty","grass2","grass3","field","abyss","deep_bridge","dirty_hole","hole2","hole3","hole4","rocky","rocky_hole","tile1","tile2","bridge_h","bridge_v","bridge_metal_v","bridge_metal_h","tile4","tile3","left","up","right","down","brick","chest_in_rock","rock3","rock2","rock1","rock0","silver3","silver2","silver1","silver0","gold3","gold2","gold1","gold0","diamond3","diamond2","diamond1","diamond0","tough2","tough9","tough1","tough8","tough7","tough6","tough5","tough4","tough3","wall6","wall5","wall4","wall3","wall2","wall1","chest","metal","tunnel","tunnel_tile","gold_chest","gold_chest_tile","metal_chest","metal_chest_tile","box1","box2","box_with_bombs","box_with_bombs_tile","goal","wc","bush","bush_hollow","gate_closed","gate_opened","button_off","button_on","button_fake","button2_off","button2_on","bridge_off","bridge_on","diamond_chest","holygrass","holytile"],"field":[[37,35,36,36,35,3,3,31,29,31,32,27,27,27,31,31,29,3,46,0,49,5,0,32,37,30,31,3,27,27,27,0,46,27,46,0,46,27,46,31,29,3,31,3,3,14,4,27,46,13,13,82,13,13,46,27,4,27,27,27,27,0,27,5,36,32,32,0,46,0,36,35],[35,3,36,32,3,3,3,3,31,32,46,0,46,27,46,32,31,32,3,27,5,5,3,32,35,32,32,48,27,27,48,0,27,27,0,27,5,46,27,27,32,32,32,3,46,0,48,0,13,13,74,24,74,13,13,27,50,27,46,27,46,0,46,13,27,46,27,27,27,27,27,36],[49,9,48,32,31,3,3,2,0,48,27,27,27,0,27,27,3,27,6,6,6,6,6,3,46,32,0,0,0,5,0,2,6,46,6,6,6,27,46,27,0,13,32,27,0,4,13,4,13,74,77,13,77,74,13,27,27,27,27,27,27,27,27,13,46,27,46,0,46,27,46,0],[0,0,4,5,3,3,2,3,32,4,48,27,46,27,46,27,9,0,6,6,6,6,6,14,0,0,46,0,48,0,0,0,6,6,6,6,6,0,27,27,51,4,46,27,46,0,45,13,81,23,14,7,13,25,81,53,0,0,46,0,46,0,51,0,27,27,27,27,27,46,0,4],[48,4,48,0,3,2,0,2,3,5,2,5,27,27,27,27,48,27,6,51,72,6,6,0,27,27,27,5,0,4,0,0,6,6,72,6,6,5,46,27,0,0,13,27,27,27,4,0,13,74,77,74,77,61,46,27,27,27,27,27,27,27,0,0,46,0,46,27,32,0,46,27],[27,13,0,50,2,14,2,0,46,0,48,27,46,27,46,27,3,49,6,6,6,6,6,13,27,46,46,27,46,13,0,13,6,6,6,46,6,27,27,0,45,5,48,27,46,27,48,0,13,13,13,74,13,13,74,27,46,27,46,27,46,27,50,0,27,13,0,27,27,27,27,27],[49,4,48,27,51,2,0,0,0,0,0,13,27,27,27,0,9,0,6,6,6,49,6,0,32,27,0,27,0,13,4,13,6,6,6,6,6,5,46,27,13,0,2,4,27,27,27,51,13,74,13,61,13,4,61,0,27,0,27,27,0,27,0,2,49,5,0,27,46,0,46,27],[0,5,0,0,13,0,2,50,48,2,49,0,50,0,48,4,3,3,0,0,0,46,5,4,46,27,46,27,49,4,10,10,27,27,0,46,13,27,27,27,0,0,2,5,46,27,52,0,36,3,13,27,74,61,13,0,46,0,46,0,46,27,47,0,0,2,0,13,5,0,27,27],[27,46,27,0,13,0,0,48,13,0,2,0,0,0,13,5,32,32,32,46,0,46,0,27,27,27,27,27,13,0,50,4,27,46,46,46,27,46,27,46,4,5,13,13,46,0,27,3,3,27,0,52,0,50,27,46,51,0,48,27,5,49,0,0,14,0,2,53,0,49,13,48],[0,27,0,0,13,7,0,0,13,52,0,51,0,49,4,48,27,27,27,27,27,27,27,27,0,48,27,46,0,48,27,49,27,27,27,27,27,27,27,27,13,4,0,48,0,49,0,0,4,0,5,0,0,0,0,27,13,51,0,49,5,46,0,52,2,2,0,4,2,5,0,13],[46,0,0,7,18,7,7,0,0,0,0,0,4,13,0,0,0,46,27,46,27,46,0,46,27,27,27,27,27,27,0,27,27,46,0,46,27,46,27,46,13,4,4,0,13,13,4,0,13,27,27,50,0,48,27,48,2,5,13,0,0,13,50,5,2,45,0,48,14,48,0,46],[0,7,7,7,18,7,7,7,4,13,0,48,0,13,27,50,27,27,0,27,0,27,27,0,0,46,27,46,27,46,27,46,27,27,27,0,27,27,27,27,27,48,0,48,0,46,0,46,0,4,0,0,14,0,0,27,5,46,5,0,2,48,0,51,0,0,0,13,13,13,0,27],[7,7,7,7,18,7,0,0,2,5,47,27,0,0,27,27,46,46,27,46,27,46,27,46,46,27,27,0,27,27,27,5,0,46,27,46,27,46,27,46,27,70,0,0,5,0,0,0,0,48,27,50,0,50,27,46,27,27,27,5,0,4,2,5,13,0,5,46,4,46,4,52],[0,0,17,17,13,0,0,27,10,4,2,50,13,0,27,48,27,0,0,27,27,0,27,27,0,46,27,46,27,46,27,48,27,27,27,27,0,27,27,27,27,46,4,46,5,0,0,50,0,27,13,0,2,0,5,0,27,46,27,48,13,49,2,13,13,13,13,5,0,45,2,2],[0,7,7,7,13,0,27,46,2,2,14,13,5,0,52,5,0,46,27,46,27,46,0,46,27,27,27,27,46,27,27,0,0,46,0,46,27,46,27,46,27,73,46,4,5,0,2,0,0,48,27,27,0,46,27,27,46,46,27,27,0,0,5,0,2,50,0,46,0,46,4,5],[7,7,0,0,13,0,27,27,5,47,0,53,5,45,4,0,27,27,27,27,27,27,0,27,27,46,27,48,27,13,27,50,27,27,27,27,27,27,27,27,27,48,27,46,4,48,0,50,0,27,27,27,0,27,0,27,27,0,27,0,5,45,4,12,14,0,0,5,0,4,0,10],[48,27,46,27,46,27,46,27,2,4,10,0,0,5,0,13,0,5,46,27,46,27,52,2,13,0,0,0,13,0,4,0,5,5,49,5,49,0,49,0,0,27,0,27,27,27,27,27,51,5,49,4,53,27,27,27,27,0,48,13,5,0,5,2,0,5,0,0,50,27,48,13],[0,0,0,27,0,27,27,27,53,13,53,13,49,13,46,27,48,5,27,27,27,13,27,13,52,2,49,0,46,4,51,0,0,4,2,5,0,2,0,4,0,13,46,27,46,27,46,27,27,27,27,27,27,27,27,46,46,27,27,27,0,52,10,2,10,5,52,27,27,51,5,10],[48,27,46,0,46,27,46,27,2,13,0,2,13,0,4,27,48,2,48,27,13,0,48,5,0,4,0,4,0,14,0,0,53,27,48,0,49,4,0,2,5,27,27,27,0,27,27,0,46,27,46,27,46,27,27,27,27,27,0,48,5,0,5,13,5,2,50,5,46,13,49,0],[0,0,27,46,27,27,27,0,48,0,50,0,49,0,27,27,27,51,27,27,27,5,5,0,0,0,53,5,49,0,46,0,0,27,27,0,13,13,4,5,46,0,50,0,46,27,46,27,27,27,0,27,27,0,0,27,0,49,27,6,6,45,6,6,11,0,2,14,0,13,0,2],[48,27,46,0,27,46,46,27,5,13,5,14,2,2,5,4,49,0,49,27,46,0,46,0,4,45,5,2,0,5,13,0,48,27,46,0,5,4,45,2,13,0,2,0,0,0,27,27,46,0,46,27,27,27,46,0,5,27,4,6,6,6,6,6,13,53,2,4,48,4,51,5],[0,27,27,0,0,27,27,46,46,4,46,0,49,0,46,13,5,0,5,4,27,49,0,0,0,0,5,10,14,2,48,4,0,27,27,50,0,0,4,4,51,5,50,0,46,13,46,27,27,46,27,27,27,27,27,0,51,4,48,6,6,72,13,6,0,0,0,2,5,0,14,14],[46,27,46,27,46,27,46,0,3,3,3,4,13,2,53,0,0,4,4,50,49,27,49,2,0,2,2,0,73,5,13,0,45,27,49,27,48,13,45,0,0,4,0,2,0,5,0,27,49,27,48,27,48,27,48,13,0,2,2,6,6,6,6,6,2,13,51,4,4,0,49,13],[0,0,5,4,0,27,32,32,32,31,31,3,53,0,48,0,2,10,5,14,2,52,0,2,0,0,47,0,52,13,48,0,2,0,2,4,5,13,0,49,5,0,53,5,46,4,46,0,0,27,0,27,0,46,4,0,2,0,47,6,6,6,6,6,4,14,5,52,0,13,0,10],[27,46,27,46,27,46,32,31,29,30,3,3,3,0,0,5,0,0,51,27,27,27,0,51,0,13,2,0,49,4,4,0,4,4,5,0,13,50,27,48,7,0,0,7,0,0,27,27,3,3,3,3,3,5,9,14,13,13,0,27,5,0,48,0,0,49,27,46,5,49,0,53],[27,0,27,27,27,46,27,32,31,31,32,46,13,50,4,50,0,27,27,70,0,0,0,2,14,6,6,6,6,6,0,51,2,0,2,0,13,27,27,27,7,7,0,7,7,0,27,46,3,3,3,0,3,9,3,0,27,46,27,46,0,46,27,50,13,0,0,0,0,4,0,13],[0,46,27,46,27,46,27,46,32,27,51,4,2,0,10,5,0,49,27,46,27,46,0,49,53,6,6,6,6,6,0,5,2,0,5,49,0,46,27,46,0,7,18,7,7,0,0,27,3,3,3,5,2,13,3,0,0,27,27,27,0,0,5,0,0,49,27,46,27,46,27,49],[27,27,0,27,27,27,27,27,27,46,4,48,0,46,4,49,0,27,13,27,27,0,0,5,0,6,6,72,0,6,0,50,4,4,0,0,0,27,4,0,0,7,18,7,7,7,0,0,3,3,9,9,9,3,3,3,0,46,0,46,27,46,5,0,0,27,0,0,27,0,0,13],[27,46,27,46,36,46,27,46,13,13,4,0,0,0,45,13,27,48,2,48,27,46,27,48,3,6,6,6,6,6,2,5,0,47,4,50,2,48,13,53,13,13,13,17,17,17,13,13,9,47,3,0,5,5,9,0,46,27,27,27,27,27,27,0,5,49,27,46,3,48,0,49],[27,27,27,27,27,27,27,27,5,46,13,48,0,46,13,50,27,27,0,27,27,27,27,5,3,6,0,6,6,6,4,45,13,0,2,2,2,0,14,5,0,0,0,7,7,7,7,0,9,3,9,3,3,3,0,9,13,46,5,46,27,46,27,46,4,0,27,0,0,0,2,2],[13,46,27,46,32,46,27,46,10,4,2,4,4,13,2,2,0,46,0,46,27,27,3,3,3,9,3,10,3,4,0,2,0,5,0,50,4,52,5,50,0,27,0,0,7,7,0,0,9,0,3,4,3,0,5,52,4,0,2,4,46,27,27,27,5,47,0,45,0,48,0,51],[2,3,0,27,27,27,27,27,0,48,0,51,5,52,0,13,27,27,46,27,27,27,36,31,3,3,3,45,27,52,0,51,5,5,0,5,0,10,13,0,5,46,27,0,7,0,0,27,3,3,9,3,3,0,0,4,2,52,4,46,27,48,27,48,0,14,0,10,2,0,0,5],[3,40,40,0,13,0,0,0,5,0,0,4,5,13,0,2,52,0,27,0,48,48,3,3,3,9,5,0,5,2,3,13,2,0,48,27,50,0,13,4,5,0,13,13,4,0,0,5,49,27,27,27,46,27,46,27,50,0,0,0,4,0,0,14,13,2,53,2,2,13,0,3],[40,40,0,0,13,7,7,0,48,4,48,13,52,0,46,0,27,46,27,45,0,27,3,3,3,9,3,5,47,2,0,13,0,13,0,0,5,0,0,0,50,27,50,0,46,0,53,0,0,0,0,0,0,0,27,27,49,0,48,27,50,2,2,2,50,0,0,0,0,0,4,0],[0,0,0,7,18,7,7,7,27,13,0,27,27,0,27,4,48,0,49,2,50,0,3,3,3,9,9,13,0,2,0,0,48,27,46,27,27,0,48,4,13,0,5,10,4,2,5,11,48,27,46,27,46,0,46,27,0,0,5,5,0,13,52,0,48,0,51,2,51,27,48,5],[0,0,7,7,18,7,7,0,46,13,46,27,46,0,48,0,0,13,5,0,0,51,0,3,3,9,2,4,45,5,53,0,27,27,27,46,27,4,27,27,51,27,48,0,53,2,0,2,0,46,27,27,27,27,0,27,50,0,0,27,46,5,49,2,0,2,0,2,13,0,4,27],[0,0,7,7,18,7,0,0,13,4,5,5,0,27,27,13,52,0,49,2,0,4,51,3,3,3,0,4,5,4,0,0,0,13,50,4,46,27,49,4,2,0,5,10,0,2,0,5,48,27,46,27,46,0,46,27,4,0,4,13,0,27,0,2,48,13,48,0,46,27,46,27],[0,7,7,7,18,0,0,4,49,0,0,0,46,27,46,0,0,2,0,13,2,14,2,9,3,9,47,2,0,0,0,14,4,0,2,0,4,13,0,49,52,13,48,4,50,0,53,14,0,27,0,0,27,46,27,0,51,2,48,27,46,27,49,5,13,2,0,45,27,27,27,27],[7,7,7,7,13,0,48,13,0,0,13,0,0,0,27,5,0,0,50,0,13,0,45,9,9,3,4,5,4,10,0,14,50,73,0,5,48,27,51,0,3,0,0,10,2,2,5,0,48,27,46,27,46,27,46,27,5,0,5,0,27,27,27,0,45,2,0,0,49,27,48,27],[7,7,0,0,13,27,0,0,47,13,46,4,48,0,46,5,0,0,13,2,0,5,5,3,3,4,0,5,0,2,4,11,4,13,0,13,5,13,0,9,3,3,0,2,47,0,50,4,0,27,27,27,27,27,0,27,52,2,49,27,46,27,53,10,0,2,13,0,0,0,0,49],[27,46,4,46,27,46,27,0,0,4,52,0,0,0,0,0,6,6,6,6,6,49,0,52,3,3,0,0,0,27,48,4,61,57,5,58,55,54,61,3,9,3,0,0,0,53,4,0,2,51,0,6,6,51,6,6,27,27,27,27,46,27,27,27,0,4,5,48,27,46,27,46],[27,0,0,0,5,27,27,48,0,49,0,49,0,51,4,4,6,6,6,6,6,13,13,2,3,49,2,48,27,46,27,49,54,15,16,16,15,15,57,0,9,3,0,51,27,48,0,4,0,0,4,6,6,6,52,6,27,46,27,46,27,46,27,46,27,13,0,0,0,0,27,0],[27,46,0,0,27,27,27,46,0,5,4,2,10,4,52,0,6,6,72,6,6,51,0,48,27,0,2,0,46,27,27,27,55,15,16,16,16,16,58,4,2,2,49,27,5,0,5,14,10,0,5,6,6,72,6,6,46,27,0,27,0,27,27,27,13,48,0,46,0,46,0,46],[0,27,27,0,27,4,0,13,10,45,4,50,0,0,2,47,6,6,6,53,6,2,0,13,32,46,5,46,0,48,27,46,56,15,22,61,16,15,58,27,0,50,27,48,4,51,13,52,13,5,13,6,6,6,6,6,0,46,27,46,27,46,27,27,27,27,27,27,27,27,27,27],[27,46,27,46,27,46,27,46,3,2,0,0,2,0,13,2,6,6,45,6,6,48,0,46,0,27,32,36,4,2,0,27,58,15,22,16,22,16,58,49,2,0,0,0,5,2,51,0,0,46,0,6,6,6,6,6,27,0,27,27,46,27,27,27,0,46,27,46,27,27,27,46],[27,0,27,27,27,27,27,0,2,52,0,48,4,50,0,13,10,0,5,5,0,0,4,13,3,27,32,46,27,48,27,46,58,15,15,15,16,15,58,0,5,50,0,51,2,52,27,50,0,5,27,13,0,0,5,0,27,46,27,46,27,46,27,46,27,27,0,27,0,27,27,27],[0,46,0,46,0,48,27,48,4,5,2,5,14,13,13,0,0,0,5,49,5,46,27,48,27,32,32,27,27,0,27,27,61,55,0,59,58,59,61,49,5,4,14,0,2,13,0,0,49,46,27,50,4,53,0,51,0,0,27,27,27,27,27,0,27,46,27,46,27,46,27,27],[0,27,27,0,4,2,0,0,0,49,0,48,13,46,52,0,0,9,0,5,27,27,32,3,32,31,32,46,0,46,27,27,0,4,4,2,0,10,4,13,0,2,4,10,2,0,52,13,4,4,0,0,2,0,0,13,27,46,27,46,27,46,27,46,27,27,27,27,27,27,27,27],[48,27,46,4,46,0,50,0,4,27,27,27,27,0,5,0,13,2,3,0,46,27,32,3,30,32,31,36,27,27,27,49,5,0,49,0,46,5,48,0,10,0,13,13,45,0,0,2,9,53,52,2,4,5,5,2,47,27,27,27,27,27,5,27,51,27,0,27,46,0,0,27],[27,27,5,5,0,4,2,13,0,27,46,27,46,27,27,27,0,2,48,0,27,46,27,3,3,3,3,3,46,32,0,5,0,48,27,48,0,27,27,27,13,0,48,5,5,5,0,0,9,0,5,2,13,2,2,2,52,27,46,27,46,27,46,27,27,27,27,27,27,27,27,27],[46,27,46,0,46,4,48,0,27,27,27,70,27,27,27,46,0,5,48,27,46,5,52,2,0,3,9,3,3,0,32,4,27,27,46,0,46,27,46,13,0,13,0,0,0,27,5,0,51,27,49,4,51,13,51,5,27,13,0,27,46,27,27,70,46,27,46,27,46,0,46,0],[27,27,27,27,27,0,0,0,46,27,46,27,46,27,46,27,0,5,0,0,0,14,0,13,52,10,51,36,32,32,46,0,46,27,27,0,27,27,27,46,50,0,46,0,46,27,46,27,32,32,0,13,4,51,0,2,50,5,45,0,46,27,46,27,27,27,27,49,27,27,27,27],[27,27,46,27,46,27,50,10,0,0,0,27,27,27,0,27,50,13,49,27,32,3,3,5,4,2,5,3,32,32,0,5,27,0,46,27,46,27,46,0,2,13,5,0,40,0,27,27,32,32,32,13,46,5,52,2,4,4,2,45,27,0,27,27,46,27,46,0,46,27,46,27],[0,46,27,0,27,27,13,2,48,0,46,27,46,27,46,27,13,0,13,27,27,27,0,0,0,0,49,27,46,27,52,14,27,27,27,27,27,27,27,27,49,0,48,0,36,32,46,32,32,32,32,13,0,0,4,0,45,0,0,4,0,49,46,27,5,0,0,14,0,5,27,49],[50,27,46,27,46,27,4,0,0,27,27,27,0,27,27,27,51,0,5,27,46,0,46,49,0,0,4,0,70,0,0,5,46,27,46,0,46,27,46,13,13,2,0,2,4,0,32,32,48,32,32,9,52,13,9,3,3,0,0,5,4,0,4,49,46,27,51,13,50,0,51,0],[0,5,4,0,13,48,0,0,0,4,46,27,46,27,46,0,10,5,2,49,27,27,27,27,32,50,46,27,46,27,50,0,27,46,0,0,27,27,27,0,31,3,3,0,46,27,46,4,3,3,3,3,3,3,9,3,9,14,10,10,0,2,51,0,4,53,2,10,0,0,2,2],[4,46,0,46,27,46,32,3,29,3,0,27,48,0,45,2,0,2,0,51,27,46,46,27,32,27,27,0,46,27,0,0,2,49,4,51,5,50,0,3,31,9,32,4,27,0,0,3,32,32,27,3,32,3,3,3,3,3,0,27,27,5,46,27,27,27,27,48,27,27,27,46],[0,27,0,27,27,70,70,27,30,32,0,46,27,52,0,4,5,0,4,4,49,27,27,0,46,46,27,46,27,46,0,49,5,7,7,7,24,7,13,3,30,3,3,46,48,48,5,0,0,46,32,32,31,32,3,3,35,32,0,48,27,27,0,27,46,27,0,27,0,0,0,27],[0,49,2,48,0,46,0,46,31,3,0,0,0,13,5,0,13,0,0,50,54,46,32,36,40,0,0,27,27,27,27,27,7,7,61,61,15,7,7,3,31,3,3,13,0,0,49,0,0,27,27,46,32,32,31,35,39,36,0,0,46,46,27,27,0,27,46,46,27,46,0,46],[0,0,2,0,2,0,2,0,3,49,0,48,27,46,0,49,0,0,52,54,27,54,46,27,40,46,27,46,27,46,5,46,7,61,16,15,15,61,7,27,13,48,4,48,0,46,5,48,13,27,27,32,31,31,35,36,40,49,10,2,0,48,27,46,27,27,0,27,0,13,0,4],[5,48,2,48,0,46,0,46,49,4,0,5,13,4,0,0,14,49,54,27,60,27,54,48,44,36,0,27,27,13,2,0,7,61,16,65,15,61,7,5,5,4,0,0,0,50,0,0,2,48,48,27,31,31,35,36,44,0,0,4,46,0,27,27,0,46,4,46,5,4,13,48],[2,5,2,4,4,0,13,0,49,49,0,5,27,48,13,2,0,0,46,54,27,54,46,27,27,46,27,46,27,46,0,46,23,15,15,15,15,63,20,4,0,46,5,46,0,48,4,51,0,0,2,0,32,32,32,36,40,36,4,48,27,46,27,46,27,5,2,0,5,13,2,0],[0,48,13,46,27,0,0,27,0,13,2,0,48,4,5,4,14,0,4,52,54,46,27,46,27,27,48,13,27,5,0,0,7,7,63,61,61,7,7,14,51,5,14,0,2,4,10,13,10,51,0,27,27,27,32,3,40,40,0,46,36,27,27,27,0,27,4,46,4,5,0,49],[2,13,4,27,27,27,0,0,0,50,0,49,0,49,27,53,10,2,0,2,49,27,27,27,46,49,0,0,4,48,3,36,3,7,19,7,7,7,13,4,5,53,5,45,0,51,13,47,5,27,13,46,0,27,3,3,36,36,0,46,0,46,27,46,27,27,0,0,27,0,0,0],[49,0,7,7,7,19,7,48,0,0,0,27,0,27,27,27,14,0,13,0,49,27,46,27,27,0,5,50,0,5,3,36,42,40,46,27,46,27,27,27,0,0,10,5,2,13,2,13,52,27,27,27,27,46,27,3,31,40,9,13,0,0,0,0,46,13,46,27,46,27,0,27],[27,7,7,61,61,63,7,7,0,27,46,27,46,27,48,0,5,10,4,5,0,5,27,27,48,46,48,27,0,14,9,3,38,36,0,27,27,0,27,46,46,0,51,0,50,0,51,0,0,27,27,27,27,46,27,32,31,36,48,27,48,27,46,0,5,0,4,46,27,27,13,27],[46,7,61,16,15,15,61,7,27,27,27,0,27,27,27,0,51,2,49,2,49,0,46,27,27,27,70,3,3,3,3,32,39,32,32,27,46,27,46,27,27,0,27,27,27,0,27,0,46,27,46,27,46,27,46,27,32,27,27,27,0,27,4,0,46,4,46,27,46,27,27,27],[27,7,61,15,65,16,61,7,46,0,46,0,46,27,46,0,5,0,0,0,0,14,4,27,50,27,46,32,32,31,3,32,32,32,27,27,27,0,27,27,48,27,46,27,46,0,46,27,27,27,27,27,27,27,27,0,32,27,46,27,46,73,50,13,27,27,27,27,27,0,0,46],[32,23,15,15,15,16,15,25,0,27,0,27,40,32,27,27,50,0,49,13,48,0,46,27,27,27,27,3,31,31,3,3,30,32,46,27,46,27,46,27,32,0,27,27,27,4,27,0,46,27,46,46,0,27,27,27,32,27,27,0,27,27,0,0,46,27,46,27,46,27,46,27],[32,7,7,61,61,63,7,7,46,27,46,27,27,32,46,27,0,13,0,50,0,2,0,5,46,0,49,9,3,3,32,3,32,46,27,27,27,27,27,32,3,27,46,27,46,27,27,27,0,27,27,27,27,27,0,27,48,0,46,27,27,0,48,5,27,27,27,27,27,27,0,27],[35,31,7,7,7,19,7,27,32,0,27,27,32,32,27,32,31,3,32,27,46,0,27,13,0,5,4,0,0,3,5,0,46,27,46,27,46,27,46,32,31,32,32,27,27,27,27,27,46,27,46,27,27,27,46,27,27,0,27,27,27,27,27,5,46,0,46,27,46,27,46,32],[39,35,32,32,32,32,32,32,31,32,46,27,46,27,46,32,30,3,32,27,27,27,51,36,36,3,3,0,3,5,53,2,0,27,27,0,27,46,27,32,31,31,31,27,46,5,46,27,27,0,0,46,27,27,27,27,46,27,46,27,27,0,48,0,0,46,27,0,27,27,27,36]]}}})
//@ sourceMappingURL=background.min.js.map